/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-04-28 14:31:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.restaurant;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("신규 음식점 입점 신청", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("center", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("신규 음식점 등록", request.getCharacterEncoding()), out, false);
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/kakaoMap/mapCSS.jsp", out, false);
      out.write("\n");
      out.write("<style>\n");
      out.write("	label{\n");
      out.write("		display:block;\n");
      out.write("		margin:3%;\n");
      out.write("	}\n");
      out.write("	label div{\n");
      out.write("		margin:1%;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<div class=\"row mt-2\">\n");
      out.write("	<div class=\"col-8\">\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/kakaoMap/kakaoMap.jsp", out, false);
      out.write("\n");
      out.write("	</div>\n");
      out.write("	<div class=\"col-4\">\n");
      out.write("		<form action=\"/restaurant/add\" method=\"post\" id=\"addInfo\" enctype=\"multipart/form-data\" class=\"text-center border rounded pb-3\">\n");
      out.write("			<label>\n");
      out.write("			<div>상호명 (*)</div>\n");
      out.write("			<input type=\"text\" name=\"restaurantName\"\n");
      out.write("				placeholder=\"아라치 치킨\">\n");
      out.write("			</label>\n");
      out.write("			<label><div>한 줄 소개</div><textarea rows=\"5\" cols=\"30\" name=\"intro\"\n");
      out.write("					placeholder=\"200 글자 이내\"></textarea>\n");
      out.write("			</label>\n");
      out.write("			<label>\n");
      out.write("				<div>이미지 (*)</div>\n");
      out.write("				<div><input type=\"file\" name=\"img\" accept=\"image/*\" multiple></div>\n");
      out.write("			</label>\n");
      out.write("			<label><div>영업 시간</div><input type=\"text\" name=\"open\"\n");
      out.write("				placeholder=\"09:00 ~ 17:00\">\n");
      out.write("			</label> <label><div>주소</div><input type=\"text\" name=\"addr\"\n");
      out.write("				placeholder=\"맵 주소를 복붙하세요\">\n");
      out.write("			</label>\n");
      out.write("			<label><div>연락처</div><input type=\"tel\" name=\"tel\"\n");
      out.write("				placeholder=\"042-719-8850\">\n");
      out.write("			</label> <label><div>편의</div><input type=\"text\" name=\"details\">\n");
      out.write("			</label>\n");
      out.write("			<button class=\"btn btn-outline-dark\" id=\"submitBtn\">완료</button>\n");
      out.write("			<button type=\"button\" class=\"btn btn-outline-dark\">취소</button>\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("	const btn = document.querySelector(\"#submitBtn\");\n");
      out.write("	const rstName = document.querySelector(\"[name='restaurantName']\");\n");
      out.write("	const imgEl = document.querySelector(\"[name='img']\");\n");
      out.write("	btn.addEventListener(\"click\", function(e) {\n");
      out.write("		e.preventDefault();\n");
      out.write("		\n");
      out.write("		if(rstName.value == \"\") {\n");
      out.write("			alert(\"상호명을 입력하세요.\");\n");
      out.write("			rstName.focus();\n");
      out.write("			\n");
      out.write("		}else{\n");
      out.write("			if(imgEl.value == \"\") {\n");
      out.write("				alert(\"이미지를 최소 1개 이상 업로드하세요\");\n");
      out.write("				imgEl.focus();\n");
      out.write("			}else{\n");
      out.write("				const form = document.querySelector(\"#addInfo\");\n");
      out.write("				form.submit();\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("	})\n");
      out.write("</script>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
